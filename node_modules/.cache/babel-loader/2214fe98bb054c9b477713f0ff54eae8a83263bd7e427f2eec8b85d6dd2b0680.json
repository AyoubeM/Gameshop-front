{"ast":null,"code":"import { addDoc, collection } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nconst migrateToFirestore = async () => {\n  try {\n    // 1. Récupérer tous les produits du backend\n    const response = await fetch(\"http://localhost:3000/products\");\n    const products = await response.json();\n\n    // 2. Pour chaque produit, l'ajouter à Firestore\n    const productsRef = collection(db, \"products\");\n    for (const product of products) {\n      await addDoc(productsRef, {\n        ...product,\n        createdAt: new Date(),\n        // Ajouter un timestamp\n        price: Number(product.price) // S'assurer que le prix est un nombre\n      });\n    }\n    console.log(`Migration réussie! ${products.length} produits migrés.`);\n    return true;\n  } catch (error) {\n    console.error(\"Erreur lors de la migration:\", error);\n    return false;\n  }\n};\nexport default migrateToFirestore;","map":{"version":3,"names":["addDoc","collection","db","migrateToFirestore","response","fetch","products","json","productsRef","product","createdAt","Date","price","Number","console","log","length","error"],"sources":["C:/Users/Berud/Desktop/frontend/src/utils/migrateToFirestore.js"],"sourcesContent":["import { addDoc, collection } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\n\r\nconst migrateToFirestore = async () => {\r\n  try {\r\n    // 1. Récupérer tous les produits du backend\r\n    const response = await fetch(\"http://localhost:3000/products\");\r\n    const products = await response.json();\r\n\r\n    // 2. Pour chaque produit, l'ajouter à Firestore\r\n    const productsRef = collection(db, \"products\");\r\n\r\n    for (const product of products) {\r\n      await addDoc(productsRef, {\r\n        ...product,\r\n        createdAt: new Date(), // Ajouter un timestamp\r\n        price: Number(product.price), // S'assurer que le prix est un nombre\r\n      });\r\n    }\r\n\r\n    console.log(`Migration réussie! ${products.length} produits migrés.`);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la migration:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default migrateToFirestore;\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,UAAU,QAAQ,oBAAoB;AACvD,SAASC,EAAE,QAAQ,aAAa;AAEhC,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;IAC9D,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;IAEtC;IACA,MAAMC,WAAW,GAAGP,UAAU,CAACC,EAAE,EAAE,UAAU,CAAC;IAE9C,KAAK,MAAMO,OAAO,IAAIH,QAAQ,EAAE;MAC9B,MAAMN,MAAM,CAACQ,WAAW,EAAE;QACxB,GAAGC,OAAO;QACVC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;QAAE;QACvBC,KAAK,EAAEC,MAAM,CAACJ,OAAO,CAACG,KAAK,CAAC,CAAE;MAChC,CAAC,CAAC;IACJ;IAEAE,OAAO,CAACC,GAAG,CAAC,sBAAsBT,QAAQ,CAACU,MAAM,mBAAmB,CAAC;IACrE,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,KAAK;EACd;AACF,CAAC;AAED,eAAed,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}