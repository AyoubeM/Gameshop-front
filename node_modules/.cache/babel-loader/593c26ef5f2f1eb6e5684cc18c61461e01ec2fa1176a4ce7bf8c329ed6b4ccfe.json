{"ast":null,"code":"// Import des fonctions nécessaires de Firebase SDK\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider, googleProvider } from \"firebase/auth\";\nimport { getAnalytics } from \"firebase/analytics\";\n\n// Configuration Firebase (remplace par tes propres paramètres Firebase)\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBPgVnRNp80Fdq9MHjojFK40z3_M84n1_s\",\n  authDomain: \"gameshop-65926.firebaseapp.com\",\n  projectId: \"gameshop-65926\",\n  storageBucket: \"gameshop-65926.appspot.com\",\n  messagingSenderId: \"574186683531\",\n  appId: \"1:574186683531:web:a353621de1f7371b0e288e\",\n  measurementId: \"G-32BS52SXL6\"\n};\n\n// Initialisation Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app); // Création de l'objet auth\nconst analytics = getAnalytics(app);\n\n// Fonction pour se connecter avec Google\nexport const signInWithGoogle = async () => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider);\n    const user = result.user;\n    console.log(\"Utilisateur connecté avec Google :\", user);\n    return user;\n  } catch (error) {\n    console.error(\"Erreur lors de la connexion avec Google :\", error);\n    throw error;\n  }\n};\n\n// Export des fonctions nécessaires\nexport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword };","map":{"version":3,"names":["initializeApp","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","googleProvider","getAnalytics","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","analytics","signInWithGoogle","result","user","console","log","error"],"sources":["C:/Users/Berud/Desktop/test/frontend/src/components/firebase.js"],"sourcesContent":["// Import des fonctions nécessaires de Firebase SDK\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword , signInWithPopup, GoogleAuthProvider, googleProvider } from \"firebase/auth\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\n// Configuration Firebase (remplace par tes propres paramètres Firebase)\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBPgVnRNp80Fdq9MHjojFK40z3_M84n1_s\",\r\n  authDomain: \"gameshop-65926.firebaseapp.com\",\r\n  projectId: \"gameshop-65926\",\r\n  storageBucket: \"gameshop-65926.appspot.com\",\r\n  messagingSenderId: \"574186683531\",\r\n  appId: \"1:574186683531:web:a353621de1f7371b0e288e\",\r\n  measurementId: \"G-32BS52SXL6\",\r\n};\r\n\r\n// Initialisation Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app); // Création de l'objet auth\r\nconst analytics = getAnalytics(app);\r\n\r\n// Fonction pour se connecter avec Google\r\nexport const signInWithGoogle = async () => {\r\n  try {\r\n    const result = await signInWithPopup(auth, googleProvider);\r\n    const user = result.user;\r\n    console.log(\"Utilisateur connecté avec Google :\", user);\r\n    return user;\r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la connexion avec Google :\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Export des fonctions nécessaires\r\nexport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword };\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,8BAA8B,EAAEC,0BAA0B,EAAGC,eAAe,EAAEC,kBAAkB,EAAEC,cAAc,QAAQ,eAAe;AACzJ,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,gCAAgC;EAC5CC,SAAS,EAAE,gBAAgB;EAC3BC,aAAa,EAAE,4BAA4B;EAC3CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGhB,aAAa,CAACQ,cAAc,CAAC;AACzC,MAAMS,IAAI,GAAGhB,OAAO,CAACe,GAAG,CAAC,CAAC,CAAC;AAC3B,MAAME,SAAS,GAAGX,YAAY,CAACS,GAAG,CAAC;;AAEnC;AACA,OAAO,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMhB,eAAe,CAACa,IAAI,EAAEX,cAAc,CAAC;IAC1D,MAAMe,IAAI,GAAGD,MAAM,CAACC,IAAI;IACxBC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,IAAI,CAAC;IACvD,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACjE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,SAASP,IAAI,EAAEf,8BAA8B,EAAEC,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}