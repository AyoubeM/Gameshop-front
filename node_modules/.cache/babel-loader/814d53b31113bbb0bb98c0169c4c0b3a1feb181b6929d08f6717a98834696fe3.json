{"ast":null,"code":"import { addDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"../components/firebase\";\n\n// Liste des catégories initiales\nconst initialCategories = [\"Jujutsu Kaisen Phantom Parade\", \"Genshin Impact\", \"Honkai: Star Rail\", \"Fate/Grand Order\", \"Dragon Ball Legend\", \"Pokemon TCG Pocket\", \"Yu-Gi-Oh! Duel Links\", \"One Piece Bounty Rush\", \"Dokkan Battle\"];\n\n// Fonction pour migrer les catégories vers Firestore\nexport const migrateCategories = async () => {\n  try {\n    const categoriesRef = collection(db, \"categories\");\n    for (const categoryName of initialCategories) {\n      await addDoc(categoriesRef, {\n        name: categoryName,\n        createdAt: new Date()\n      });\n    }\n    console.log(\"Catégories migrées avec succès!\");\n    return true;\n  } catch (error) {\n    console.error(\"Erreur lors de la migration des catégories:\", error);\n    return false;\n  }\n};\n\n// Fonction pour récupérer toutes les catégories\nexport const fetchCategories = async () => {\n  try {\n    const categoriesRef = collection(db, \"categories\");\n    const snapshot = await getDocs(categoriesRef);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      name: doc.data().name\n    }));\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des catégories:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["addDoc","collection","getDocs","db","initialCategories","migrateCategories","categoriesRef","categoryName","name","createdAt","Date","console","log","error","fetchCategories","snapshot","docs","map","doc","id","data"],"sources":["C:/Users/Berud/Desktop/frontend/src/utils/categories.js"],"sourcesContent":["import { addDoc, collection, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"../components/firebase\";\r\n\r\n// Liste des catégories initiales\r\nconst initialCategories = [\r\n  \"Jujutsu Kaisen Phantom Parade\",\r\n  \"Genshin Impact\",\r\n  \"Honkai: Star Rail\",\r\n  \"Fate/Grand Order\",\r\n  \"Dragon Ball Legend\",\r\n  \"Pokemon TCG Pocket\",\r\n  \"Yu-Gi-Oh! Duel Links\",\r\n  \"One Piece Bounty Rush\",\r\n  \"Dokkan Battle\",\r\n];\r\n\r\n// Fonction pour migrer les catégories vers Firestore\r\nexport const migrateCategories = async () => {\r\n  try {\r\n    const categoriesRef = collection(db, \"categories\");\r\n\r\n    for (const categoryName of initialCategories) {\r\n      await addDoc(categoriesRef, {\r\n        name: categoryName,\r\n        createdAt: new Date(),\r\n      });\r\n    }\r\n\r\n    console.log(\"Catégories migrées avec succès!\");\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la migration des catégories:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Fonction pour récupérer toutes les catégories\r\nexport const fetchCategories = async () => {\r\n  try {\r\n    const categoriesRef = collection(db, \"categories\");\r\n    const snapshot = await getDocs(categoriesRef);\r\n    return snapshot.docs.map((doc) => ({\r\n      id: doc.id,\r\n      name: doc.data().name,\r\n    }));\r\n  } catch (error) {\r\n    console.error(\"Erreur lors de la récupération des catégories:\", error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AAChE,SAASC,EAAE,QAAQ,wBAAwB;;AAE3C;AACA,MAAMC,iBAAiB,GAAG,CACxB,+BAA+B,EAC/B,gBAAgB,EAChB,mBAAmB,EACnB,kBAAkB,EAClB,oBAAoB,EACpB,oBAAoB,EACpB,sBAAsB,EACtB,uBAAuB,EACvB,eAAe,CAChB;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMC,aAAa,GAAGL,UAAU,CAACE,EAAE,EAAE,YAAY,CAAC;IAElD,KAAK,MAAMI,YAAY,IAAIH,iBAAiB,EAAE;MAC5C,MAAMJ,MAAM,CAACM,aAAa,EAAE;QAC1BE,IAAI,EAAED,YAAY;QAClBE,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC,CAAC;IACJ;IAEAC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACnE,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMR,aAAa,GAAGL,UAAU,CAACE,EAAE,EAAE,YAAY,CAAC;IAClD,MAAMY,QAAQ,GAAG,MAAMb,OAAO,CAACI,aAAa,CAAC;IAC7C,OAAOS,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;MACjCC,EAAE,EAAED,GAAG,CAACC,EAAE;MACVX,IAAI,EAAEU,GAAG,CAACE,IAAI,CAAC,CAAC,CAACZ;IACnB,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IACtE,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}