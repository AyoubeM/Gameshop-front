{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Berud\\\\Desktop\\\\frontend\\\\src\\\\components\\\\AdminSetup.jsx\",\n  _s = $RefreshSig$();\nimport { doc, setDoc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth, db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminSetup = () => {\n  _s();\n  var _auth$currentUser;\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Vérifier si l'utilisateur est connecté\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (!user) {\n        navigate(\"/login\");\n      }\n      setIsLoading(false);\n    });\n    return () => unsubscribe();\n  }, [navigate]);\n  const setupAdmin = async () => {\n    try {\n      const user = auth.currentUser;\n      if (!user) {\n        setMessage(\"Vous devez être connecté\");\n        navigate(\"/login\");\n        return;\n      }\n      console.log(\"Current user:\", user); // Pour le debug\n\n      // Créer ou mettre à jour le document utilisateur\n      await setDoc(doc(db, \"users\", user.uid), {\n        email: user.email,\n        role: \"admin\",\n        createdAt: new Date().toISOString()\n      }, {\n        merge: true\n      });\n      setMessage(\"Compte admin créé avec succès!\");\n    } catch (error) {\n      console.error(\"Error details:\", error); // Pour voir les détails de l'erreur\n      setMessage(`Erreur: ${error.message}`);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Configuration Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Utilisateur connect\\xE9: \", (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setupAdmin,\n      children: \"Devenir Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: message.includes(\"Erreur\") ? \"red\" : \"green\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminSetup, \"Ahe7wmRhHdHncxOT7FjyziGqLm4=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminSetup;\nexport default AdminSetup;\nvar _c;\n$RefreshReg$(_c, \"AdminSetup\");","map":{"version":3,"names":["doc","setDoc","React","useEffect","useState","useNavigate","auth","db","jsxDEV","_jsxDEV","AdminSetup","_s","_auth$currentUser","message","setMessage","isLoading","setIsLoading","navigate","unsubscribe","onAuthStateChanged","user","setupAdmin","currentUser","console","log","uid","email","role","createdAt","Date","toISOString","merge","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","onClick","color","includes","_c","$RefreshReg$"],"sources":["C:/Users/Berud/Desktop/frontend/src/components/AdminSetup.jsx"],"sourcesContent":["import { doc, setDoc } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth, db } from \"./firebase\";\r\n\r\nconst AdminSetup = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Vérifier si l'utilisateur est connecté\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (!user) {\r\n        navigate(\"/login\");\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [navigate]);\r\n\r\n  const setupAdmin = async () => {\r\n    try {\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        setMessage(\"Vous devez être connecté\");\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n\r\n      console.log(\"Current user:\", user); // Pour le debug\r\n\r\n      // Créer ou mettre à jour le document utilisateur\r\n      await setDoc(\r\n        doc(db, \"users\", user.uid),\r\n        {\r\n          email: user.email,\r\n          role: \"admin\",\r\n          createdAt: new Date().toISOString(),\r\n        },\r\n        { merge: true }\r\n      );\r\n\r\n      setMessage(\"Compte admin créé avec succès!\");\r\n    } catch (error) {\r\n      console.error(\"Error details:\", error); // Pour voir les détails de l'erreur\r\n      setMessage(`Erreur: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Configuration Admin</h2>\r\n      <p>Utilisateur connecté: {auth.currentUser?.email}</p>\r\n      <button onClick={setupAdmin}>Devenir Admin</button>\r\n      {message && (\r\n        <p style={{ color: message.includes(\"Erreur\") ? \"red\" : \"green\" }}>\r\n          {message}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSetup;\r\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAChD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,EAAEC,EAAE,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,WAAW,GAAGZ,IAAI,CAACa,kBAAkB,CAAEC,IAAI,IAAK;MACpD,IAAI,CAACA,IAAI,EAAE;QACTH,QAAQ,CAAC,QAAQ,CAAC;MACpB;MACAD,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,MAAME,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMD,IAAI,GAAGd,IAAI,CAACgB,WAAW;MAC7B,IAAI,CAACF,IAAI,EAAE;QACTN,UAAU,CAAC,0BAA0B,CAAC;QACtCG,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;MAEAM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,IAAI,CAAC,CAAC,CAAC;;MAEpC;MACA,MAAMnB,MAAM,CACVD,GAAG,CAACO,EAAE,EAAE,OAAO,EAAEa,IAAI,CAACK,GAAG,CAAC,EAC1B;QACEC,KAAK,EAAEN,IAAI,CAACM,KAAK;QACjBC,IAAI,EAAE,OAAO;QACbC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC,EACD;QAAEC,KAAK,EAAE;MAAK,CAChB,CAAC;MAEDjB,UAAU,CAAC,gCAAgC,CAAC;IAC9C,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC,CAAC,CAAC;MACxClB,UAAU,CAAC,WAAWkB,KAAK,CAACnB,OAAO,EAAE,CAAC;IACxC;EACF,CAAC;EAED,IAAIE,SAAS,EAAE;IACb,oBAAON,OAAA;MAAAwB,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,oBACE5B,OAAA;IAAK6B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAN,QAAA,gBAC9BxB,OAAA;MAAAwB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B5B,OAAA;MAAAwB,QAAA,GAAG,2BAAsB,GAAArB,iBAAA,GAACN,IAAI,CAACgB,WAAW,cAAAV,iBAAA,uBAAhBA,iBAAA,CAAkBc,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtD5B,OAAA;MAAQ+B,OAAO,EAAEnB,UAAW;MAAAY,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClDxB,OAAO,iBACNJ,OAAA;MAAG6B,KAAK,EAAE;QAAEG,KAAK,EAAE5B,OAAO,CAAC6B,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG;MAAQ,CAAE;MAAAT,QAAA,EAC/DpB;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA9DID,UAAU;EAAA,QAGGL,WAAW;AAAA;AAAAsC,EAAA,GAHxBjC,UAAU;AAgEhB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}